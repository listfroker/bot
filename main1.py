import telebot
from telebot import types
import pandas as pd
import time
import datetime

bot = telebot.TeleBot("5308655718:AAGUt0xaSAZTiMFEPHUFHxUkbqYcluKoDKg", parse_mode=None)

name = ""
childName = ""
complaint = ""

user_mailing = None



@bot.message_handler(commands=['start'])
def welcome(message):
    bot.reply_to(message, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫!\n", parse_mode='html')
    time.sleep(1)
    bot.send_message(message.from_user.id, '–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?')
    bot.register_next_step_handler(message, get_name)


def get_name(message):
    global name;
    name = message.text;
    bot.send_message(message.from_user.id, "–ö–∞–∫ –∑–æ–≤—É—Ç –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞?")
    bot.register_next_step_handler(message, get_childName)


def get_childName(message):
    global childName;
    global name;
    global user_mailing
    user_mailing = True
    childName = message.text;
    inMarkup = types.InlineKeyboardMarkup()
    inMarkup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='choice1'))
    bot.send_message(message.from_user.id,f'{name}, —Å–ø–∞—Å–∏–±–æ, —Ä–∞–∑ –≤ –º–µ—Å—è—Ü —è –±—É–¥—É —Å–≤—è–∑—ã–≤–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –≤ —É–∑–Ω–∞–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–æ—à–µ–ª –ø—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü –∑–∞–Ω—è—Ç–∏–π. –í–∞–º —É–¥–∞—á–∏ –∏ –∂–µ–ª–∞—é —á—Ç–æ–±—ã {childName} –∂–¥–∞–ª(-a) —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –Ω–∞—à–∏—Ö —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–Ω—è—Ç–∏–π!',reply_markup=inMarkup)


@bot.callback_query_handler(func=lambda callback: True)
def callback(callback):
    try:
        if callback.message:
            if callback.data == "choice1":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                but1 = types.KeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É‚õî")
                but2 = types.KeyboardButton("–ñ–∞–ª–æ–±—ã/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èüëÇ")
                markup.add(but1, but2)
                bot.send_message(callback.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=markup)
    except Exception as e:
        print(repr(e))


@bot.message_handler(content_types=['text'])
def menu(message):
    if (message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É‚õî"):
        bot.send_message(message.from_user.id, "–û–∫–µ–πüëå –Ø –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –í–∞–º –ø–∏—Å–∞—Ç—å.")
        global user_mailing
        user_mailing = False
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton("–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")
        but2 = types.KeyboardButton("–ñ–∞–ª–æ–±—ã/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èüëÇ")
        markup.add(but1, but2)
        # bot.send_message(message.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=markup)
    elif (message.text == "–ñ–∞–ª–æ–±—ã/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èüëÇ"):
        bot.send_message(message.from_user.id, "–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–∂–∞–ª–æ–±—É")


    elif (message.text == "–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"):
        bot.send_message(message.from_user.id, "–í—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É")
        global user_mailing
        user_mailing = True
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É‚õî")
        but2 = types.KeyboardButton("–ñ–∞–ª–æ–±—ã/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èüëÇ")
        markup.add(but1, but2)
        # bot.send_message(message.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=markup)







bot.infinity_polling()
